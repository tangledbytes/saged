{"version":3,"sources":["../../dist/plus~YOwKNLmC.svg","../../dist/heading~QOqIzRab.svg","../../dist/subheading~GoYdSCEx.svg","../../dist/blockquote~KUbmhmdU.svg","../../dist/unorderedlist~bfbrgOYJ.svg","../../dist/orderedlist~GrRCmwBQ.svg","../../dist/code~bnLStfXP.svg","../../dist/markdown~lbIWfMVw.svg","../../dist/bold~smduNppc.svg","../../dist/italic~bkFUWxpm.svg","../../dist/underline~dQaKFara.svg","App.js","index.js","../../src/components/CodeEditor/supportedLanguages.ts","../../src/components/CodeEditor/index.tsx","../../src/components/BlogEditor/CodeEditorWrapper/index.tsx","../../node_modules/dompurify/dist/purify.js","../../src/components/MarkdownEditor/index.tsx","../../src/components/BlogEditor/MarkdownEditorWrapper/index.tsx","../../src/components/BlogEditor/AtomicBlockWrapper/index.tsx","../../src/assets/plus.svg","../../src/assets/heading.svg","../../src/assets/subheading.svg","../../src/assets/blockquote.svg","../../src/assets/unorderedlist.svg","../../src/assets/orderedlist.svg","../../src/assets/code.svg","../../src/assets/markdown.svg","../../src/components/BlogEditor/utility.ts","../../src/components/BlogEditor/SideToolbar/index.tsx","../../src/assets/bold.svg","../../src/assets/italic.svg","../../src/assets/underline.svg","../../src/components/BlogEditor/InlineToolbar/index.tsx","../../src/components/Button/index.tsx","../../src/components/BlogEditor/index.tsx","../../src/index.tsx"],"names":["module","exports","content","JSON","stringify","data","App","location","window","pathname","hash","console","log","className","path","readonly","localStorage","getItem","Switch","href","ReactDOM","render","document","getElementById","SUPPORTED_LANGUAGES","abap","displayName","apex","bat","clojure","coffee","cpp","csharp","csp","css","dart","dockerfile","fsharp","go","graphql","handlebars","html","java","javascript","julia","kotlin","less","lexon","lua","markdown","mips","mysql","pascal","perl","pgsql","php","powershell","pug","python","r","ruby","rust","scss","shell","sophia","sql","swift","twig","typescript","vb","xml","yaml","EditorBtn","options","active","Classes","editorBtn","onClick","e","ref","setRef","editorBtnName","SupportedLanguages","onFocus","useState","useRef","inputRef","useEffect","ev","onBlur","handleMouseDown","interrupt","setDisplay","onClickHander","SL","slinputContainer","slinput","placeholder","value","onChange","setValue","sllist","Object","name","key","i","sl","Header","head","cbtns","style","backgroundColor","getHeight","renderFooter","height","CodeEditor","language","code","readOnly","footer","header","currentLanguageRef","languageSelectorRef","setDisplayHandler","setDisplayOptions","setCurrentLanguageHandler","setCurrentLanguage","editor","displayOptions","option","currentNode","currentRef","targetNode","React","editable","currentLanguage","theme","editorDidMount","_valueGetter","_","bottom","setEditable","CodeEditorWrapper","props","contentState","blockProps","contentStateRef","entityKey","block","newState","setInit","memoizedOnBlur","useCallback","memoizedOnFocus","newContentState","init","hasOwnProperty","setPrototypeOf","isFrozen","objectKeys","keys","freeze","seal","_ref","Reflect","apply","construct","fun","thisValue","args","x","Func","Function","prototype","bind","concat","arr","Array","isArray","arr2","length","from","_toConsumableArray","arrayForEach","unapply","forEach","arrayIndexOf","indexOf","arrayJoin","join","arrayPop","pop","arrayPush","push","arraySlice","slice","stringToLowerCase","String","toLowerCase","stringMatch","match","stringReplace","replace","stringIndexOf","stringTrim","trim","regExpTest","RegExp","test","regExpCreate","unconstruct","typeErrorCreate","TypeError","func","thisArg","_len","arguments","_key","_len2","_key2","addToSet","set","array","l","element","lcElement","clone","object","newObject","property","svg","svgFilters","mathMl","text","html$1","svg$1","mathMl$1","MUSTACHE_EXPR","ERB_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","_typeof","Symbol","iterator","obj","constructor","_toConsumableArray$1","getGlobal","_createTrustedTypesPolicy","trustedTypes","createPolicy","suffix","currentScript","hasAttribute","getAttribute","policyName","createHTML","html$$1","warn","createDOMPurify","undefined","DOMPurify","root","version","removed","nodeType","isSupported","originalDocument","removeTitle","DocumentFragment","HTMLTemplateElement","Node","NodeFilter","_window$NamedNodeMap","NamedNodeMap","MozNamedAttrMap","Text","Comment","DOMParser","template","createElement","ownerDocument","trustedTypesPolicy","emptyHTML","_document","implementation","createNodeIterator","getElementsByTagName","createDocumentFragment","importNode","hooks","createHTMLDocument","documentMode","MUSTACHE_EXPR$$1","ERB_EXPR$$1","DATA_ATTR$$1","ARIA_ATTR$$1","IS_SCRIPT_OR_DATA$$1","ATTR_WHITESPACE$$1","IS_ALLOWED_URI$$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_JQUERY","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_DOM_IMPORT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","CONFIG","formElement","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","_forceRemove","node","parentNode","removeChild","outerHTML","_removeAttribute","attribute","getAttributeNode","removeAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","body","firstElementChild","insertBefore","createTextNode","childNodes","call","querySelector","innerHTML","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","FILTER_ACCEPT","_isClobbered","elm","nodeName","textContent","attributes","setAttribute","namespaceURI","_isNode","_executeHook","entryPoint","hook","_sanitizeElements","tagName","allowedTags","querySelectorAll","insertAdjacentHTML","htmlToInsert","cloneNode","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attr","idAttr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","_attr","forceKeepAttr","id","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","oldNode","returnNode","toString","toStaticHTML","appendChild","firstChild","nodeIterator","serializedHTML","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","factory","MarkdownEditorWrapper","DomPurify","marked","contentEditable","onMouseEnter","onMouseLeave","onInput","editorIsFocused","editorIsActive","updateEditorState","AtomicBlockWrapper","type","require","getNodeFromKey","getAbsolutePosition","offsetTop","offsetLeft","rect","top","left","StyleButton","subType","onMouseDown","onToggle","BLOCK_TYPES","label","icon","src","H1","H2","Bq","Ul","Ol","Code","Md","BlockStyleControls","editorState","selection","blockType","controls","idx","SideToolbar","offSetLeft","offSetTop","memoizedClickHandler","setShow","start","currentContentBlock","currentContent","computedStyle","totalNodeHeight","parseInt","setPostion","toolbarContainer","position","iconContainer","plusIcon","Plus","drawer","show","toggleBlockStyle","blockStyle","INLINE_STYLES","Bold","Italic","Underline","InlineStyleControls","currentStyle","initialPosition","InlineToolbar","toggleInlineStyle","selectionRect","target","error","getVisibleSelectionRect","offsetTopRem","offsetLeftRem","pageoffset","editorPosition","Button","blockStyleFn","ContentBlock","saveToLocalStorage","clearTimeout","timer","setTimeout","lstore","saveToLocalStorageHOF","retrieveFromLocalStorage","deserializeToContentState","convertFromRaw","BlogEditor","storageKey","EditorState","oldContent","initializeEditorState","DraftRef","DraftContainerRef","saveToStorageFn","state","convertToRaw","memoizedBlockRendererFn","component","onFinishEdit","setState","container","editMode","editorRef","RichUtils","contentStateWithEntity","newEditorState","AtomicBlockUtils","draftKey","atomicKey","atomicParent","divReferenceToAtomicParent","inlineStyle","spellCheck","editorIsUp","keyBindingFn","getDefaultKeyBinding","handleKeyCommand","command","blockRendererFn","btn"],"mappings":"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","file":"static/js/main.964bf320.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plus~YOwKNLmC.c6e2430b.svg\";","module.exports = __webpack_public_path__ + \"static/media/heading~QOqIzRab.0d1155f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/subheading~GoYdSCEx.1b1e8de6.svg\";","module.exports = __webpack_public_path__ + \"static/media/blockquote~KUbmhmdU.02705ada.svg\";","module.exports = __webpack_public_path__ + \"static/media/unorderedlist~bfbrgOYJ.e797468f.svg\";","module.exports = __webpack_public_path__ + \"static/media/orderedlist~GrRCmwBQ.e9866d99.svg\";","module.exports = __webpack_public_path__ + \"static/media/code~bnLStfXP.239fded4.svg\";","module.exports = __webpack_public_path__ + \"static/media/markdown~lbIWfMVw.91b80a13.svg\";","module.exports = __webpack_public_path__ + \"static/media/bold~smduNppc.1396e979.svg\";","module.exports = __webpack_public_path__ + \"static/media/italic~bkFUWxpm.d72dac67.svg\";","module.exports = __webpack_public_path__ + \"static/media/underline~dQaKFara.e281fa6a.svg\";","import React from 'react'\nimport './index.css'\nimport Editor from 'saged'\nimport 'saged/dist/index.css'\nimport data from './data.json'\n\nconst content = JSON.stringify(data)\n\nconst Switch = (path) => {\n    switch (true) {\n        case path === '/saged/':\n            return (\n                <div className='editor'>\n                    <Editor content={content} />\n                </div>\n            )\n        case path === '/saged/#preview':\n            return (\n                <div className='editor'>\n                    <Editor content={content} readonly />\n                </div>\n            )\n        case path === '/saged/#editor':\n            return (\n                <div className='editor'>\n                    <Editor />\n                </div>\n            )\n        case path === '/saged/#editor/preview':\n            return (\n                <div className='editor'>\n                    <Editor content={localStorage.getItem('item')} readonly />\n                </div>\n            )\n\n        default:\n            return (\n                <div className='notfound-container'>\n                    <div className='notfound-text'>404 - Page Not Found</div>\n                </div>\n            )\n    }\n}\n\nconst App = () => {\n    const location = window.location.pathname + window.location.hash\n    console.log(window.location)\n    return (\n        <div className='container'>\n            {Switch(location)}\n            <div className='btn-container'>\n                <div>\n                    <a href='/saged' className='btn'>\n                        Editor\n                    </a>\n                </div>\n                <div>\n                    <a href='/saged/#preview' className='btn'>\n                        Preview\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","import { ISupportedLanguageMap } from './index'\n\nexport const SUPPORTED_LANGUAGES: ISupportedLanguageMap = {\n    abap: { displayName: \"ABAP (Advanced Business Application Programming)\" },\n    apex: { displayName: \"Apex\" },\n    bat: { displayName: \"Batch\" },\n    clojure: { displayName: \"Clojure\" },\n    coffee: { displayName: \"CoffeeScript\" },\n    cpp: { displayName: \"C++\" },\n    csharp: { displayName: \"C#\" },\n    csp: { displayName: \"CSP (Communication Sequential Processing)\" },\n    css: { displayName: \"CSS\" },\n    dart: { displayName: \"Dart\" },\n    dockerfile: { displayName: \"Dockerfile\" },\n    fsharp: { displayName: \"F#\" },\n    go: { displayName: \"Go (Golang)\" },\n    graphql: { displayName: \"Graphql\" },\n    handlebars: { displayName: \"Handlebars\" },\n    html: { displayName: \"HTML\" },\n    java: { displayName: \"Java\" },\n    javascript: { displayName: \"JavaScript\" },\n    julia: { displayName: \"Julia\" },\n    kotlin: { displayName: \"Kotlin\" },\n    less: { displayName: \"Less\" },\n    lexon: { displayName: \"Lexon\" },\n    lua: { displayName: \"Lua\" },\n    markdown: { displayName: \"Markdown\" },\n    mips: { displayName: \"MIPS\" },\n    mysql: { displayName: \"MySQL\" },\n    \"objective-c\": { displayName: \"Objective-C\" },\n    pascal: { displayName: \"Pascal\" },\n    perl: { displayName: \"Perl\" },\n    pgsql: { displayName: \"PGSQL\" },\n    php: { displayName: \"PHP\" },\n    \"\": { displayName: \"Plain Text\" },\n    powershell: { displayName: \"PowerShell\" },\n    pug: { displayName: \"pug\" },\n    python: { displayName: \"Python3\" },\n    r: { displayName: \"R\" },\n    ruby: { displayName: \"Ruby\" },\n    rust: { displayName: \"Rust\" },\n    scss: { displayName: \"SCSS\" },\n    shell: { displayName: \"Shell\" },\n    sophia: { displayName: \"Sopia\" },\n    sql: { displayName: \"SQL\" },\n    swift: { displayName: \"Swift\" },\n    twig: { displayName: \"Twig\" },\n    typescript: { displayName: \"TypeScript\" },\n    vb: { displayName: \"Visual Basic\" },\n    xml: { displayName: \"XML\" },\n    yaml: { displayName: \"YAML\" }\n}\n","import React, { useState, useRef, useEffect, Fragment } from 'react'\nimport Manoco from '@monaco-editor/react'\nimport { SUPPORTED_LANGUAGES } from './supportedLanguages'\n\nimport Classes from './index.module.css'\n\n// =============================== INTERFACES =======================================\n\nexport interface EditorProps {\n    language?: string\n    code?: string\n    readOnly?: boolean\n    className?: string\n    onChange?: (content: any, language?: string) => void\n    header?: boolean\n    footer?: boolean\n    height?: string\n    onBlur?: (event?: any) => void\n    onFocus?: (event?: any) => void\n}\n\ninterface EditorBtnProps {\n    onClick: (e: React.MouseEvent) => void\n    name: string\n    active: boolean\n    setRef?: React.RefObject<HTMLDivElement>\n    options?: boolean\n}\n\ninterface SupportedLanguagesProps {\n    onClick: (language: string) => void\n    setDisplay: () => void\n    interrupt: (\n        e: MouseEvent,\n        currentRef: React.RefObject<HTMLDivElement>\n    ) => boolean\n    onBlur?: (event?: any) => void\n    onFocus?: (event?: any) => void\n}\n\nexport interface ISupportedLanguageMap {\n    [language: string]: {\n        displayName: string\n    }\n}\n\n// ========================================== CONSTANTS ===================================================\n\nexport { SUPPORTED_LANGUAGES }\n\n// ========================================== COMPONENTS ====================================================\n\n/**\n * EditorBtn renders the functional buttons present at the bottom of the\n * monaco editor\n * @param param0\n */\nfunction EditorBtn({\n    onClick,\n    name,\n    options = false,\n    setRef,\n    active = false\n}: EditorBtnProps) {\n    const onClickHander = (e: React.MouseEvent) => {\n        onClick(e)\n    }\n\n    return (\n        <div className={Classes.editorBtn} onClick={onClickHander} ref={setRef}>\n            {options && (\n                <div\n                    className={[Classes.icon, active ? Classes.active : null]\n                        .join(' ')\n                        .trimEnd()}\n                >\n                    &#9650;\n                </div>\n            )}\n            <div className={Classes.editorBtnName}>{name}</div>\n        </div>\n    )\n}\n\n/**\n * SupportedLanguages componenet renders the supported languages\n * menu along with the search component\n * @param param0\n */\nfunction SupportedLanguages({\n    onClick,\n    setDisplay,\n    interrupt,\n    onBlur,\n    onFocus\n}: SupportedLanguagesProps) {\n    const [value, setValue] = useState<string>('')\n    const ref = useRef<HTMLDivElement>(null)\n    const inputRef = useRef<HTMLInputElement>(null)\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handleMouseDown)\n        if (inputRef.current) {\n            inputRef.current.onfocus = (ev) => {\n                if (onFocus) onFocus(ev)\n            }\n\n            inputRef.current.onblur = (ev) => {\n                if (onBlur) onBlur(ev)\n            }\n\n            inputRef.current.focus()\n        }\n\n        return () => {\n            return document.removeEventListener('mousedown', handleMouseDown)\n        }\n\n        // eslint-disable-next-line\n    }, [])\n\n    const handleMouseDown = (e: MouseEvent) => {\n        if (interrupt(e, ref)) return undefined\n        else setDisplay()\n        return undefined\n    }\n\n    const onChange = (e: React.ChangeEvent) => {\n        setValue((e.target as HTMLInputElement).value)\n    }\n\n    const onClickHander = (e: React.MouseEvent) => {\n        onClick((e.target as HTMLDivElement).getAttribute('data-lid') as string)\n    }\n\n    return (\n        <div className={Classes.SL} ref={ref}>\n            <div className={Classes.slinputContainer}>\n                <input\n                    ref={inputRef}\n                    className={Classes.slinput}\n                    placeholder='Set Language'\n                    value={value}\n                    onChange={onChange}\n                />\n            </div>\n            <div className={Classes.sllist}>\n                {Object.keys(SUPPORTED_LANGUAGES).map((sl, i) => {\n                    const name = SUPPORTED_LANGUAGES[sl].displayName\n                    if (value) {\n                        if (\n                            name\n                                .toLocaleLowerCase()\n                                .startsWith(value.toLocaleLowerCase())\n                        )\n                            return (\n                                <div\n                                    key={i}\n                                    data-lid={sl}\n                                    onClick={onClickHander}\n                                >\n                                    {name}\n                                </div>\n                            )\n                    } else {\n                        return (\n                            <div key={i} data-lid={sl} onClick={onClickHander}>\n                                {name}\n                            </div>\n                        )\n                    }\n                    return null\n                })}\n            </div>\n        </div>\n    )\n}\n\n/**\n * Header returns JSX for the header of the Monaco editor\n */\nfunction Header() {\n    return (\n        <div className={Classes.head}>\n            <div\n                className={Classes.cbtns}\n                style={{ backgroundColor: '#FF5F56' }}\n            />\n            <div\n                className={Classes.cbtns}\n                style={{ backgroundColor: '#FFBD2E' }}\n            />\n            <div\n                className={Classes.cbtns}\n                style={{ backgroundColor: '#27C93F' }}\n            />\n        </div>\n    )\n}\n\n// =========================================== HELPER FUNCTION ===========================================\n\n/**\n * getHeight returns the calcualated height for the editor\n * @param renderFooter\n * @param renderHeader\n */\nfunction getHeight(renderFooter: boolean, renderHeader: boolean) {\n    let height = 0\n    const HEADER_HEIGHT = 2.25 // If height of header is changed in CSS then change it here also\n    const FOOTER_HEIGHT = 1.5 // If height of footer is changed in CSS then change it here also\n\n    if (renderFooter) height += FOOTER_HEIGHT\n\n    if (renderHeader) height += HEADER_HEIGHT\n\n    return height\n}\n\n// =========================================== COMPONENT =================================================\n\nfunction CodeEditor({\n    language = 'javascript',\n    className,\n    code = '',\n    readOnly = false,\n    onChange,\n    footer = false,\n    header = false,\n    height = '20rem',\n    onBlur,\n    onFocus\n}: EditorProps) {\n    const [currentLanguage, setCurrentLanguage] = useState<string>(language)\n    const [editable, setEditable] = useState<boolean>(!readOnly)\n    const [displayOptions, setDisplayOptions] = useState<boolean>(false)\n\n    const ref = useRef<any>(null)\n    const currentLanguageRef = useRef<string>(currentLanguage)\n    const languageSelectorRef = useRef<HTMLDivElement>(null)\n\n    const setEditableHandler = () => setEditable(!editable)\n    const setDisplayHandler = () => setDisplayOptions(!displayOptions)\n    const setCurrentLanguageHandler = (language: string) => {\n        currentLanguageRef.current = language\n        setCurrentLanguage(language)\n    }\n\n    const handleMount = (_valueGetter: any, editor: any) => {\n        ref.current = editor\n\n        ref.current.onDidBlurEditorText((ev: any) => {\n            if (onBlur) onBlur(ev)\n        })\n\n        ref.current.onDidFocusEditorText((ev: any) => {\n            if (onFocus) onFocus(ev)\n        })\n\n        if (typeof onChange === 'function') {\n            ref.current.onDidChangeModelContent((_: any) => {\n                onChange(ref.current.getValue(), currentLanguageRef.current)\n            })\n        }\n    }\n\n    const interrupt = (\n        e: MouseEvent,\n        currentRef: React.RefObject<HTMLDivElement>\n    ) => {\n        const currentNode = currentRef.current as Node\n        const targetNode = e.target as Node\n        if (\n            (languageSelectorRef.current as Node).contains(targetNode) ||\n            currentNode.contains(targetNode)\n        )\n            return true\n\n        return false\n    }\n\n    useEffect(() => {\n        setCurrentLanguageHandler(language)\n    }, [language])\n\n    return (\n        <div className={className} style={{ height }}>\n            <div className={Classes.editor}>\n                {displayOptions && (\n                    <div className={Classes.option}>\n                        <SupportedLanguages\n                            onBlur={onBlur}\n                            onFocus={onFocus}\n                            interrupt={interrupt}\n                            onClick={setCurrentLanguageHandler}\n                            setDisplay={setDisplayHandler}\n                        />\n                    </div>\n                )}\n                {header && <Header />}\n                <Manoco\n                    options={{ readOnly: !editable }}\n                    value={code}\n                    language={currentLanguage}\n                    theme='dark'\n                    editorDidMount={handleMount}\n                    height={`calc(100% - ${getHeight(footer, header)}rem)`}\n                />\n                {footer && (\n                    <div className={Classes.bottom}>\n                        {!readOnly && (\n                            <Fragment>\n                                <EditorBtn\n                                    active={displayOptions}\n                                    setRef={languageSelectorRef}\n                                    onClick={setDisplayHandler}\n                                    name={\n                                        SUPPORTED_LANGUAGES[currentLanguage]\n                                            .displayName\n                                    }\n                                    options\n                                />\n                                <EditorBtn\n                                    active={false}\n                                    onClick={setEditableHandler}\n                                    name={`Edit: ${editable}`}\n                                />\n                            </Fragment>\n                        )}\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default CodeEditor\n","import React, { useEffect, useState, useCallback, useRef } from 'react'\nimport Editor from '../../CodeEditor'\n\n// =================================== INTERFACES ========================================\n\nexport interface ICodeEditorWrapper {\n    blockProps: {\n        language: string\n        height: string\n        readonly: boolean\n        setEditorIsUp: (state: boolean) => void\n        onFinishEdit: (contentState: any) => void\n    }\n    block: any\n    contentState: any\n}\n\n// =================================== COMPONENTS =========================================\n\n/**\n * A wrapper for the code editor\n * @param props\n */\nconst CodeEditorWrapper = (props: ICodeEditorWrapper) => {\n    const { blockProps, block, contentState } = props\n    const [init, setInit] = useState({\n        code: '',\n        language: blockProps.language\n    })\n\n    // Had to hold a reference to the latest value of contentstate\n    // as for some reason the callback functions were getting stale\n    // value of the this prop\n    const contentStateRef = useRef<any>(contentState)\n    contentStateRef.current = contentState\n\n    // This sets the initial code while also making sure\n    // that no \"code\" prop of the Editor is not\n    // directly associated with a wrapper prop\n    // Hence it avoids rerenders on each click\n    useEffect(() => {\n        const entityKey = block.getEntityAt(0)\n\n        if (entityKey) {\n            const data = contentState.getEntity(entityKey)?.getData()\n            const newState = {\n                code: data.content,\n                language: data.language\n            }\n            setInit(newState)\n        }\n\n        // eslint-disable-next-line\n    }, [])\n\n    /**\n     * Memoized implementation of onBlur handler\n     */\n    const memoizedOnBlur = useCallback(() => {\n        blockProps.setEditorIsUp(false)\n    }, [blockProps])\n\n    /**\n     * Memoized implementation of onFocus handler\n     */\n    const memoizedOnFocus = useCallback(() => {\n        blockProps.setEditorIsUp(true)\n    }, [blockProps])\n\n    return (\n        <Editor\n            header\n            footer\n            onChange={(code: string, language?: string) => {\n                const entityKey = block.getEntityAt(0)\n                const contentState = contentStateRef.current\n                if (entityKey) {\n                    const newContentState = contentState.mergeEntityData(\n                        entityKey,\n                        {\n                            content: code,\n                            language: language || blockProps.language\n                        }\n                    )\n                    blockProps.onFinishEdit(newContentState)\n                } else console.log('OOPS')\n            }}\n            code={init.code}\n            onBlur={memoizedOnBlur}\n            onFocus={memoizedOnFocus}\n            language={init.language}\n            height={blockProps.height}\n            readOnly={blockProps.readonly}\n        />\n    )\n}\n\nexport default CodeEditorWrapper\n","/*! @license DOMPurify | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.0.8/LICENSE */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.DOMPurify = factory());\n}(this, function () { 'use strict';\n\n  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n  var hasOwnProperty = Object.hasOwnProperty,\n      setPrototypeOf = Object.setPrototypeOf,\n      isFrozen = Object.isFrozen,\n      objectKeys = Object.keys;\n  var freeze = Object.freeze,\n      seal = Object.seal; // eslint-disable-line import/no-mutable-exports\n\n  var _ref = typeof Reflect !== 'undefined' && Reflect,\n      apply = _ref.apply,\n      construct = _ref.construct;\n\n  if (!apply) {\n    apply = function apply(fun, thisValue, args) {\n      return fun.apply(thisValue, args);\n    };\n  }\n\n  if (!freeze) {\n    freeze = function freeze(x) {\n      return x;\n    };\n  }\n\n  if (!seal) {\n    seal = function seal(x) {\n      return x;\n    };\n  }\n\n  if (!construct) {\n    construct = function construct(Func, args) {\n      return new (Function.prototype.bind.apply(Func, [null].concat(_toConsumableArray(args))))();\n    };\n  }\n\n  var arrayForEach = unapply(Array.prototype.forEach);\n  var arrayIndexOf = unapply(Array.prototype.indexOf);\n  var arrayJoin = unapply(Array.prototype.join);\n  var arrayPop = unapply(Array.prototype.pop);\n  var arrayPush = unapply(Array.prototype.push);\n  var arraySlice = unapply(Array.prototype.slice);\n\n  var stringToLowerCase = unapply(String.prototype.toLowerCase);\n  var stringMatch = unapply(String.prototype.match);\n  var stringReplace = unapply(String.prototype.replace);\n  var stringIndexOf = unapply(String.prototype.indexOf);\n  var stringTrim = unapply(String.prototype.trim);\n\n  var regExpTest = unapply(RegExp.prototype.test);\n  var regExpCreate = unconstruct(RegExp);\n\n  var typeErrorCreate = unconstruct(TypeError);\n\n  function unapply(func) {\n    return function (thisArg) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return apply(func, thisArg, args);\n    };\n  }\n\n  function unconstruct(func) {\n    return function () {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return construct(func, args);\n    };\n  }\n\n  /* Add properties to a lookup table */\n  function addToSet(set, array) {\n    if (setPrototypeOf) {\n      // Make 'in' and truthy checks like Boolean(set.constructor)\n      // independent of any properties defined on Object.prototype.\n      // Prevent prototype setters from intercepting set as a this value.\n      setPrototypeOf(set, null);\n    }\n\n    var l = array.length;\n    while (l--) {\n      var element = array[l];\n      if (typeof element === 'string') {\n        var lcElement = stringToLowerCase(element);\n        if (lcElement !== element) {\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\n          if (!isFrozen(array)) {\n            array[l] = lcElement;\n          }\n\n          element = lcElement;\n        }\n      }\n\n      set[element] = true;\n    }\n\n    return set;\n  }\n\n  /* Shallow clone an object */\n  function clone(object) {\n    var newObject = {};\n\n    var property = void 0;\n    for (property in object) {\n      if (apply(hasOwnProperty, object, [property])) {\n        newObject[property] = object[property];\n      }\n    }\n\n    return newObject;\n  }\n\n  var html = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n  // SVG\n  var svg = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'audio', 'canvas', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'video', 'view', 'vkern']);\n\n  var svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\n  var mathMl = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']);\n\n  var text = freeze(['#text']);\n\n  var html$1 = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns']);\n\n  var svg$1 = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'tabindex', 'targetx', 'targety', 'transform', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n\n  var mathMl$1 = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n\n  var xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n  // eslint-disable-next-line unicorn/better-regex\n  var MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n  var ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\n  var DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n  var ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n  var IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n  );\n  var IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n  var ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205f\\u3000]/g // eslint-disable-line no-control-regex\n  );\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  function _toConsumableArray$1(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n  var getGlobal = function getGlobal() {\n    return typeof window === 'undefined' ? null : window;\n  };\n\n  /**\n   * Creates a no-op policy for internal use only.\n   * Don't export this function outside this module!\n   * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n   * @param {Document} document The document object (to determine policy name suffix)\n   * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n   * are not supported).\n   */\n  var _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\n    if ((typeof trustedTypes === 'undefined' ? 'undefined' : _typeof(trustedTypes)) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n      return null;\n    }\n\n    // Allow the callers to control the unique policy name\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n    // Policy creation with duplicate names throws in Trusted Types.\n    var suffix = null;\n    var ATTR_NAME = 'data-tt-policy-suffix';\n    if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\n      suffix = document.currentScript.getAttribute(ATTR_NAME);\n    }\n\n    var policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n    try {\n      return trustedTypes.createPolicy(policyName, {\n        createHTML: function createHTML(html$$1) {\n          return html$$1;\n        }\n      });\n    } catch (_) {\n      // Policy creation failed (most likely another DOMPurify script has\n      // already run). Skip creating the policy, as this will only cause errors\n      // if TT are enforced.\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n      return null;\n    }\n  };\n\n  function createDOMPurify() {\n    var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n    var DOMPurify = function DOMPurify(root) {\n      return createDOMPurify(root);\n    };\n\n    /**\n     * Version label, exposed for easier checks\n     * if DOMPurify is up to date or not\n     */\n    DOMPurify.version = '2.0.11';\n\n    /**\n     * Array of elements that DOMPurify removed during sanitation.\n     * Empty if nothing was removed.\n     */\n    DOMPurify.removed = [];\n\n    if (!window || !window.document || window.document.nodeType !== 9) {\n      // Not running in a browser, provide a factory function\n      // so that you can pass your own Window\n      DOMPurify.isSupported = false;\n\n      return DOMPurify;\n    }\n\n    var originalDocument = window.document;\n    var removeTitle = false;\n\n    var document = window.document;\n    var DocumentFragment = window.DocumentFragment,\n        HTMLTemplateElement = window.HTMLTemplateElement,\n        Node = window.Node,\n        NodeFilter = window.NodeFilter,\n        _window$NamedNodeMap = window.NamedNodeMap,\n        NamedNodeMap = _window$NamedNodeMap === undefined ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,\n        Text = window.Text,\n        Comment = window.Comment,\n        DOMParser = window.DOMParser,\n        trustedTypes = window.trustedTypes;\n\n    // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n\n    if (typeof HTMLTemplateElement === 'function') {\n      var template = document.createElement('template');\n      if (template.content && template.content.ownerDocument) {\n        document = template.content.ownerDocument;\n      }\n    }\n\n    var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);\n    var emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n\n    var _document = document,\n        implementation = _document.implementation,\n        createNodeIterator = _document.createNodeIterator,\n        getElementsByTagName = _document.getElementsByTagName,\n        createDocumentFragment = _document.createDocumentFragment;\n    var importNode = originalDocument.importNode;\n\n\n    var hooks = {};\n\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n    DOMPurify.isSupported = implementation && typeof implementation.createHTMLDocument !== 'undefined' && document.documentMode !== 9;\n\n    var MUSTACHE_EXPR$$1 = MUSTACHE_EXPR,\n        ERB_EXPR$$1 = ERB_EXPR,\n        DATA_ATTR$$1 = DATA_ATTR,\n        ARIA_ATTR$$1 = ARIA_ATTR,\n        IS_SCRIPT_OR_DATA$$1 = IS_SCRIPT_OR_DATA,\n        ATTR_WHITESPACE$$1 = ATTR_WHITESPACE;\n    var IS_ALLOWED_URI$$1 = IS_ALLOWED_URI;\n\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n\n    /* allowed element names */\n\n    var ALLOWED_TAGS = null;\n    var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(html), _toConsumableArray$1(svg), _toConsumableArray$1(svgFilters), _toConsumableArray$1(mathMl), _toConsumableArray$1(text)));\n\n    /* Allowed attribute names */\n    var ALLOWED_ATTR = null;\n    var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray$1(html$1), _toConsumableArray$1(svg$1), _toConsumableArray$1(mathMl$1), _toConsumableArray$1(xml)));\n\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n    var FORBID_TAGS = null;\n\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n    var FORBID_ATTR = null;\n\n    /* Decide if ARIA attributes are okay */\n    var ALLOW_ARIA_ATTR = true;\n\n    /* Decide if custom data attributes are okay */\n    var ALLOW_DATA_ATTR = true;\n\n    /* Decide if unknown protocols are okay */\n    var ALLOW_UNKNOWN_PROTOCOLS = false;\n\n    /* Output should be safe for jQuery's $() factory? */\n    var SAFE_FOR_JQUERY = false;\n\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n    var SAFE_FOR_TEMPLATES = false;\n\n    /* Decide if document with <html>... should be returned */\n    var WHOLE_DOCUMENT = false;\n\n    /* Track whether config is already set on this instance of DOMPurify. */\n    var SET_CONFIG = false;\n\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n    var FORCE_BODY = false;\n\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n     * string (or a TrustedHTML object if Trusted Types are supported).\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n    var RETURN_DOM = false;\n\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\n    var RETURN_DOM_FRAGMENT = false;\n\n    /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\n     * `Node` is imported into the current `Document`. If this flag is not enabled the\n     * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\n     * DOMPurify. */\n    var RETURN_DOM_IMPORT = false;\n\n    /* Try to return a Trusted Type object instead of a string, retrun a string in\n     * case Trusted Types are not supported  */\n    var RETURN_TRUSTED_TYPE = false;\n\n    /* Output should be free from DOM clobbering attacks? */\n    var SANITIZE_DOM = true;\n\n    /* Keep element content when removing element? */\n    var KEEP_CONTENT = true;\n\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n     * of importing it into a new Document and returning a sanitized copy */\n    var IN_PLACE = false;\n\n    /* Allow usage of profiles like html, svg and mathMl */\n    var USE_PROFILES = {};\n\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n    var FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n\n    /* Tags that are safe for data: URIs */\n    var DATA_URI_TAGS = null;\n    var DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n\n    /* Attributes safe for values like \"javascript:\" */\n    var URI_SAFE_ATTRIBUTES = null;\n    var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'summary', 'title', 'value', 'style', 'xmlns']);\n\n    /* Keep a reference to config to pass to hooks */\n    var CONFIG = null;\n\n    /* Ideally, do not touch anything below this line */\n    /* ______________________________________________ */\n\n    var formElement = document.createElement('form');\n\n    /**\n     * _parseConfig\n     *\n     * @param  {Object} cfg optional config literal\n     */\n    // eslint-disable-next-line complexity\n    var _parseConfig = function _parseConfig(cfg) {\n      if (CONFIG && CONFIG === cfg) {\n        return;\n      }\n\n      /* Shield configuration object from tampering */\n      if (!cfg || (typeof cfg === 'undefined' ? 'undefined' : _typeof(cfg)) !== 'object') {\n        cfg = {};\n      }\n\n      /* Set configuration parameters */\n      ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;\n      ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;\n      URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR) : DEFAULT_URI_SAFE_ATTRIBUTES;\n      DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS) : DEFAULT_DATA_URI_TAGS;\n      FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n      FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n      USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n      SAFE_FOR_JQUERY = cfg.SAFE_FOR_JQUERY || false; // Default false\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n      RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT || false; // Default false\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\n      IS_ALLOWED_URI$$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$$1;\n      if (SAFE_FOR_TEMPLATES) {\n        ALLOW_DATA_ATTR = false;\n      }\n\n      if (RETURN_DOM_FRAGMENT) {\n        RETURN_DOM = true;\n      }\n\n      /* Parse profile info */\n      if (USE_PROFILES) {\n        ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(text)));\n        ALLOWED_ATTR = [];\n        if (USE_PROFILES.html === true) {\n          addToSet(ALLOWED_TAGS, html);\n          addToSet(ALLOWED_ATTR, html$1);\n        }\n\n        if (USE_PROFILES.svg === true) {\n          addToSet(ALLOWED_TAGS, svg);\n          addToSet(ALLOWED_ATTR, svg$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.svgFilters === true) {\n          addToSet(ALLOWED_TAGS, svgFilters);\n          addToSet(ALLOWED_ATTR, svg$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.mathMl === true) {\n          addToSet(ALLOWED_TAGS, mathMl);\n          addToSet(ALLOWED_ATTR, mathMl$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n      }\n\n      /* Merge configuration parameters */\n      if (cfg.ADD_TAGS) {\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\n        }\n\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n      }\n\n      if (cfg.ADD_ATTR) {\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\n        }\n\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n      }\n\n      if (cfg.ADD_URI_SAFE_ATTR) {\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n      }\n\n      /* Add #text in case KEEP_CONTENT is set to true */\n      if (KEEP_CONTENT) {\n        ALLOWED_TAGS['#text'] = true;\n      }\n\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n      if (WHOLE_DOCUMENT) {\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n      }\n\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n      if (ALLOWED_TAGS.table) {\n        addToSet(ALLOWED_TAGS, ['tbody']);\n        delete FORBID_TAGS.tbody;\n      }\n\n      // Prevent further manipulation of configuration.\n      // Not available in IE8, Safari 5, etc.\n      if (freeze) {\n        freeze(cfg);\n      }\n\n      CONFIG = cfg;\n    };\n\n    /**\n     * _forceRemove\n     *\n     * @param  {Node} node a DOM node\n     */\n    var _forceRemove = function _forceRemove(node) {\n      arrayPush(DOMPurify.removed, { element: node });\n      try {\n        // eslint-disable-next-line unicorn/prefer-node-remove\n        node.parentNode.removeChild(node);\n      } catch (_) {\n        node.outerHTML = emptyHTML;\n      }\n    };\n\n    /**\n     * _removeAttribute\n     *\n     * @param  {String} name an Attribute name\n     * @param  {Node} node a DOM node\n     */\n    var _removeAttribute = function _removeAttribute(name, node) {\n      try {\n        arrayPush(DOMPurify.removed, {\n          attribute: node.getAttributeNode(name),\n          from: node\n        });\n      } catch (_) {\n        arrayPush(DOMPurify.removed, {\n          attribute: null,\n          from: node\n        });\n      }\n\n      node.removeAttribute(name);\n    };\n\n    /**\n     * _initDocument\n     *\n     * @param  {String} dirty a string of dirty markup\n     * @return {Document} a DOM, filled with the dirty markup\n     */\n    var _initDocument = function _initDocument(dirty) {\n      /* Create a HTML document */\n      var doc = void 0;\n      var leadingWhitespace = void 0;\n\n      if (FORCE_BODY) {\n        dirty = '<remove></remove>' + dirty;\n      } else {\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n        var matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n        leadingWhitespace = matches && matches[0];\n      }\n\n      var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      /* Use the DOMParser API by default, fallback later if needs be */\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, 'text/html');\n      } catch (_) {}\n\n      /* Remove title to fix a mXSS bug in older MS Edge */\n      if (removeTitle) {\n        addToSet(FORBID_TAGS, ['title']);\n      }\n\n      /* Use createHTMLDocument in case DOMParser is not available */\n      if (!doc || !doc.documentElement) {\n        doc = implementation.createHTMLDocument('');\n        var _doc = doc,\n            body = _doc.body;\n\n        body.parentNode.removeChild(body.parentNode.firstElementChild);\n        body.outerHTML = dirtyPayload;\n      }\n\n      if (dirty && leadingWhitespace) {\n        doc.body.insertBefore(document.createTextNode(leadingWhitespace), doc.body.childNodes[0] || null);\n      }\n\n      /* Work on whole document or just its body */\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    };\n\n    /* Here we test for a broken feature in Edge that might cause mXSS */\n    if (DOMPurify.isSupported) {\n      (function () {\n        try {\n          var doc = _initDocument('<x/><title>&lt;/title&gt;&lt;img&gt;');\n          if (regExpTest(/<\\/title/, doc.querySelector('title').innerHTML)) {\n            removeTitle = true;\n          }\n        } catch (_) {}\n      })();\n    }\n\n    /**\n     * _createIterator\n     *\n     * @param  {Document} root document/fragment to create iterator for\n     * @return {Iterator} iterator instance\n     */\n    var _createIterator = function _createIterator(root) {\n      return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, function () {\n        return NodeFilter.FILTER_ACCEPT;\n      }, false);\n    };\n\n    /**\n     * _isClobbered\n     *\n     * @param  {Node} elm element to check for clobbering attacks\n     * @return {Boolean} true if clobbered, false if safe\n     */\n    var _isClobbered = function _isClobbered(elm) {\n      if (elm instanceof Text || elm instanceof Comment) {\n        return false;\n      }\n\n      if (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string') {\n        return true;\n      }\n\n      return false;\n    };\n\n    /**\n     * _isNode\n     *\n     * @param  {Node} obj object to check whether it's a DOM node\n     * @return {Boolean} true is object is a DOM node\n     */\n    var _isNode = function _isNode(object) {\n      return (typeof Node === 'undefined' ? 'undefined' : _typeof(Node)) === 'object' ? object instanceof Node : object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\n    };\n\n    /**\n     * _executeHook\n     * Execute user configurable hooks\n     *\n     * @param  {String} entryPoint  Name of the hook's entry point\n     * @param  {Node} currentNode node to work on with the hook\n     * @param  {Object} data additional hook parameters\n     */\n    var _executeHook = function _executeHook(entryPoint, currentNode, data) {\n      if (!hooks[entryPoint]) {\n        return;\n      }\n\n      arrayForEach(hooks[entryPoint], function (hook) {\n        hook.call(DOMPurify, currentNode, data, CONFIG);\n      });\n    };\n\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     *\n     * @param   {Node} currentNode to check for permission to exist\n     * @return  {Boolean} true if node was killed, false if left alive\n     */\n    // eslint-disable-next-line complexity\n    var _sanitizeElements = function _sanitizeElements(currentNode) {\n      var content = void 0;\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeElements', currentNode, null);\n\n      /* Check if element is clobbered or can clobber */\n      if (_isClobbered(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Now let's check the element's type and name */\n      var tagName = stringToLowerCase(currentNode.nodeName);\n\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeElement', currentNode, {\n        tagName: tagName,\n        allowedTags: ALLOWED_TAGS\n      });\n\n      /* Take care of an mXSS pattern using p, br inside svg, math */\n      if ((tagName === 'svg' || tagName === 'math') && currentNode.querySelectorAll('p, br').length !== 0) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove element if anything forbids its presence */\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n        /* Keep content except for black-listed elements */\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName] && typeof currentNode.insertAdjacentHTML === 'function') {\n          try {\n            var htmlToInsert = currentNode.innerHTML;\n            currentNode.insertAdjacentHTML('AfterEnd', trustedTypesPolicy ? trustedTypesPolicy.createHTML(htmlToInsert) : htmlToInsert);\n          } catch (_) {}\n        }\n\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove in case a noscript/noembed XSS is suspected */\n      if (tagName === 'noscript' && regExpTest(/<\\/noscript/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      if (tagName === 'noembed' && regExpTest(/<\\/noembed/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Convert markup to cover jQuery behavior */\n      if (SAFE_FOR_JQUERY && !currentNode.firstElementChild && (!currentNode.content || !currentNode.content.firstElementChild) && regExpTest(/</g, currentNode.textContent)) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        if (currentNode.innerHTML) {\n          currentNode.innerHTML = stringReplace(currentNode.innerHTML, /</g, '&lt;');\n        } else {\n          currentNode.innerHTML = stringReplace(currentNode.textContent, /</g, '&lt;');\n        }\n      }\n\n      /* Sanitize element content to be template-safe */\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n        /* Get the element's text content */\n        content = currentNode.textContent;\n        content = stringReplace(content, MUSTACHE_EXPR$$1, ' ');\n        content = stringReplace(content, ERB_EXPR$$1, ' ');\n        if (currentNode.textContent !== content) {\n          arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n          currentNode.textContent = content;\n        }\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeElements', currentNode, null);\n\n      return false;\n    };\n\n    /**\n     * _isValidAttribute\n     *\n     * @param  {string} lcTag Lowercase tag name of containing element.\n     * @param  {string} lcName Lowercase attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid, otherwise false.\n     */\n    // eslint-disable-next-line complexity\n    var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n        return false;\n      }\n\n      /* Allow valid data-* attributes: At least one character after \"-\"\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n          We don't need to check the value; it's always URI safe. */\n      if (ALLOW_DATA_ATTR && regExpTest(DATA_ATTR$$1, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$$1, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        return false;\n\n        /* Check value is safe. First, is attr inert? If so, is safe */\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if (!value) ; else {\n        return false;\n      }\n\n      return true;\n    };\n\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param  {Node} currentNode to sanitize\n     */\n    // eslint-disable-next-line complexity\n    var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n      var attr = void 0;\n      var value = void 0;\n      var lcName = void 0;\n      var idAttr = void 0;\n      var l = void 0;\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n      var attributes = currentNode.attributes;\n\n      /* Check if we have attributes; if not we might have a text node */\n\n      if (!attributes) {\n        return;\n      }\n\n      var hookEvent = {\n        attrName: '',\n        attrValue: '',\n        keepAttr: true,\n        allowedAttributes: ALLOWED_ATTR\n      };\n      l = attributes.length;\n\n      /* Go backwards over all attributes; safely remove bad ones */\n      while (l--) {\n        attr = attributes[l];\n        var _attr = attr,\n            name = _attr.name,\n            namespaceURI = _attr.namespaceURI;\n\n        value = stringTrim(attr.value);\n        lcName = stringToLowerCase(name);\n\n        /* Execute a hook if present */\n        hookEvent.attrName = lcName;\n        hookEvent.attrValue = value;\n        hookEvent.keepAttr = true;\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n        value = hookEvent.attrValue;\n        /* Did the hooks approve of the attribute? */\n        if (hookEvent.forceKeepAttr) {\n          continue;\n        }\n\n        /* Remove attribute */\n        // Safari (iOS + Mac), last tested v8.0.5, crashes if you try to\n        // remove a \"name\" attribute from an <img> tag that has an \"id\"\n        // attribute at the time.\n        if (lcName === 'name' && currentNode.nodeName === 'IMG' && attributes.id) {\n          idAttr = attributes.id;\n          attributes = arraySlice(attributes, []);\n          _removeAttribute('id', currentNode);\n          _removeAttribute(name, currentNode);\n          if (arrayIndexOf(attributes, idAttr) > l) {\n            currentNode.setAttribute('id', idAttr.value);\n          }\n        } else if (\n        // This works around a bug in Safari, where input[type=file]\n        // cannot be dynamically set after type has been removed\n        currentNode.nodeName === 'INPUT' && lcName === 'type' && value === 'file' && hookEvent.keepAttr && (ALLOWED_ATTR[lcName] || !FORBID_ATTR[lcName])) {\n          continue;\n        } else {\n          // This avoids a crash in Safari v9.0 with double-ids.\n          // The trick is to first set the id to be empty and then to\n          // remove the attribute\n          if (name === 'id') {\n            currentNode.setAttribute(name, '');\n          }\n\n          _removeAttribute(name, currentNode);\n        }\n\n        /* Did the hooks approve of the attribute? */\n        if (!hookEvent.keepAttr) {\n          continue;\n        }\n\n        /* Work around a security issue in jQuery 3.0 */\n        if (SAFE_FOR_JQUERY && regExpTest(/\\/>/i, value)) {\n          _removeAttribute(name, currentNode);\n          continue;\n        }\n\n        /* Take care of an mXSS pattern using namespace switches */\n        if (regExpTest(/svg|math/i, currentNode.namespaceURI) && regExpTest(regExpCreate('</(' + arrayJoin(objectKeys(FORBID_CONTENTS), '|') + ')', 'i'), value)) {\n          _removeAttribute(name, currentNode);\n          continue;\n        }\n\n        /* Sanitize attribute content to be template-safe */\n        if (SAFE_FOR_TEMPLATES) {\n          value = stringReplace(value, MUSTACHE_EXPR$$1, ' ');\n          value = stringReplace(value, ERB_EXPR$$1, ' ');\n        }\n\n        /* Is `value` valid for this attribute? */\n        var lcTag = currentNode.nodeName.toLowerCase();\n        if (!_isValidAttribute(lcTag, lcName, value)) {\n          continue;\n        }\n\n        /* Handle invalid data-* attribute set by try-catching it */\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n\n          arrayPop(DOMPurify.removed);\n        } catch (_) {}\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeAttributes', currentNode, null);\n    };\n\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param  {DocumentFragment} fragment to iterate over recursively\n     */\n    var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n      var shadowNode = void 0;\n      var shadowIterator = _createIterator(fragment);\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n      while (shadowNode = shadowIterator.nextNode()) {\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(shadowNode)) {\n          continue;\n        }\n\n        /* Deep shadow DOM detected */\n        if (shadowNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(shadowNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(shadowNode);\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeShadowDOM', fragment, null);\n    };\n\n    /**\n     * Sanitize\n     * Public method providing core sanitation functionality\n     *\n     * @param {String|Node} dirty string or DOM node\n     * @param {Object} configuration object\n     */\n    // eslint-disable-next-line complexity\n    DOMPurify.sanitize = function (dirty, cfg) {\n      var body = void 0;\n      var importedNode = void 0;\n      var currentNode = void 0;\n      var oldNode = void 0;\n      var returnNode = void 0;\n      /* Make sure we have a string to sanitize.\n        DO NOT return early, as this will return the wrong type if\n        the user has requested a DOM object rather than a string */\n      if (!dirty) {\n        dirty = '<!-->';\n      }\n\n      /* Stringify, in case dirty is an object */\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\n        // eslint-disable-next-line no-negated-condition\n        if (typeof dirty.toString !== 'function') {\n          throw typeErrorCreate('toString is not a function');\n        } else {\n          dirty = dirty.toString();\n          if (typeof dirty !== 'string') {\n            throw typeErrorCreate('dirty is not a string, aborting');\n          }\n        }\n      }\n\n      /* Check we can run. Otherwise fall back or ignore */\n      if (!DOMPurify.isSupported) {\n        if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\n          if (typeof dirty === 'string') {\n            return window.toStaticHTML(dirty);\n          }\n\n          if (_isNode(dirty)) {\n            return window.toStaticHTML(dirty.outerHTML);\n          }\n        }\n\n        return dirty;\n      }\n\n      /* Assign config vars */\n      if (!SET_CONFIG) {\n        _parseConfig(cfg);\n      }\n\n      /* Clean up removed elements */\n      DOMPurify.removed = [];\n\n      /* Check if dirty is correctly typed for IN_PLACE */\n      if (typeof dirty === 'string') {\n        IN_PLACE = false;\n      }\n\n      if (IN_PLACE) ; else if (dirty instanceof Node) {\n        /* If dirty is a DOM element, append to an empty document to avoid\n           elements being stripped by the parser */\n        body = _initDocument('<!-->');\n        importedNode = body.ownerDocument.importNode(dirty, true);\n        if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n          /* Node is already a body, use as is */\n          body = importedNode;\n        } else if (importedNode.nodeName === 'HTML') {\n          body = importedNode;\n        } else {\n          // eslint-disable-next-line unicorn/prefer-node-append\n          body.appendChild(importedNode);\n        }\n      } else {\n        /* Exit directly if we have nothing to do */\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && RETURN_TRUSTED_TYPE &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n          return trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        }\n\n        /* Initialize the document to work on */\n        body = _initDocument(dirty);\n\n        /* Check we have a DOM node from the data */\n        if (!body) {\n          return RETURN_DOM ? null : emptyHTML;\n        }\n      }\n\n      /* Remove first element node (ours) if FORCE_BODY is set */\n      if (body && FORCE_BODY) {\n        _forceRemove(body.firstChild);\n      }\n\n      /* Get node iterator */\n      var nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n      /* Now start iterating over the created document */\n      while (currentNode = nodeIterator.nextNode()) {\n        /* Fix IE's strange behavior with manipulated textNodes #89 */\n        if (currentNode.nodeType === 3 && currentNode === oldNode) {\n          continue;\n        }\n\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(currentNode)) {\n          continue;\n        }\n\n        /* Shadow DOM detected, sanitize it */\n        if (currentNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(currentNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(currentNode);\n\n        oldNode = currentNode;\n      }\n\n      oldNode = null;\n\n      /* If we sanitized `dirty` in-place, return it. */\n      if (IN_PLACE) {\n        return dirty;\n      }\n\n      /* Return sanitized string or DOM */\n      if (RETURN_DOM) {\n        if (RETURN_DOM_FRAGMENT) {\n          returnNode = createDocumentFragment.call(body.ownerDocument);\n\n          while (body.firstChild) {\n            // eslint-disable-next-line unicorn/prefer-node-append\n            returnNode.appendChild(body.firstChild);\n          }\n        } else {\n          returnNode = body;\n        }\n\n        if (RETURN_DOM_IMPORT) {\n          /*\n            AdoptNode() is not used because internal state is not reset\n            (e.g. the past names map of a HTMLFormElement), this is safe\n            in theory but we would rather not risk another attack vector.\n            The state that is cloned by importNode() is explicitly defined\n            by the specs.\n          */\n          returnNode = importNode.call(originalDocument, returnNode, true);\n        }\n\n        return returnNode;\n      }\n\n      var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n      /* Sanitize final string template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$$1, ' ');\n        serializedHTML = stringReplace(serializedHTML, ERB_EXPR$$1, ' ');\n      }\n\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n    };\n\n    /**\n     * Public method to set the configuration once\n     * setConfig\n     *\n     * @param {Object} cfg configuration object\n     */\n    DOMPurify.setConfig = function (cfg) {\n      _parseConfig(cfg);\n      SET_CONFIG = true;\n    };\n\n    /**\n     * Public method to remove the configuration\n     * clearConfig\n     *\n     */\n    DOMPurify.clearConfig = function () {\n      CONFIG = null;\n      SET_CONFIG = false;\n    };\n\n    /**\n     * Public method to check if an attribute value is valid.\n     * Uses last set config, if any. Otherwise, uses config defaults.\n     * isValidAttribute\n     *\n     * @param  {string} tag Tag name of containing element.\n     * @param  {string} attr Attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n     */\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\n      /* Initialize shared config vars if necessary. */\n      if (!CONFIG) {\n        _parseConfig({});\n      }\n\n      var lcTag = stringToLowerCase(tag);\n      var lcName = stringToLowerCase(attr);\n      return _isValidAttribute(lcTag, lcName, value);\n    };\n\n    /**\n     * AddHook\n     * Public method to add DOMPurify hooks\n     *\n     * @param {String} entryPoint entry point for the hook to add\n     * @param {Function} hookFunction function to execute\n     */\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\n      if (typeof hookFunction !== 'function') {\n        return;\n      }\n\n      hooks[entryPoint] = hooks[entryPoint] || [];\n      arrayPush(hooks[entryPoint], hookFunction);\n    };\n\n    /**\n     * RemoveHook\n     * Public method to remove a DOMPurify hook at a given entryPoint\n     * (pops it from the stack of hooks if more are present)\n     *\n     * @param {String} entryPoint entry point for the hook to remove\n     */\n    DOMPurify.removeHook = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        arrayPop(hooks[entryPoint]);\n      }\n    };\n\n    /**\n     * RemoveHooks\n     * Public method to remove all DOMPurify hooks at a given entryPoint\n     *\n     * @param  {String} entryPoint entry point for the hooks to remove\n     */\n    DOMPurify.removeHooks = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        hooks[entryPoint] = [];\n      }\n    };\n\n    /**\n     * RemoveAllHooks\n     * Public method to remove all DOMPurify hooks\n     *\n     */\n    DOMPurify.removeAllHooks = function () {\n      hooks = {};\n    };\n\n    return DOMPurify;\n  }\n\n  var purify = createDOMPurify();\n\n  return purify;\n\n}));\n//# sourceMappingURL=purify.js.map\n","import React, { useRef, useEffect, useState } from 'react'\nimport marked from 'marked'\nimport DomPurify from 'dompurify'\nimport Classes from './index.module.css'\n\nexport interface IMarkdownEditor {\n    content: string\n    readonly?: boolean\n    onFocus?: (e?: React.FocusEvent<HTMLDivElement>) => any\n    onBlur?: (e?: React.FocusEvent<HTMLDivElement>) => any\n    onMouseEnter?: (e?: React.MouseEvent<HTMLDivElement, MouseEvent>) => any\n    onMouseLeave?: (e?: React.MouseEvent<HTMLDivElement, MouseEvent>) => any\n    onChange?: (content?: string) => any\n}\n\nfunction MarkdownEditorWrapper({\n    content,\n    readonly,\n    onFocus,\n    onBlur,\n    onMouseEnter,\n    onMouseLeave,\n    onChange\n}: IMarkdownEditor) {\n    const [value, setValue] = useState<string>(content || '')\n\n    const ref = useRef<HTMLDivElement>(null)\n\n    useEffect(() => {\n        setValue(content || '')\n        if (ref.current)\n            ref.current.innerHTML = DomPurify.sanitize(marked(content || ''))\n    }, [content])\n\n    function focusHandler(e: React.FocusEvent<HTMLDivElement>) {\n        if (ref.current) ref.current.innerHTML = value\n        if (onFocus) onFocus(e)\n    }\n\n    function blurHandler(e: React.FocusEvent<HTMLDivElement>) {\n        if (ref.current)\n            ref.current.innerHTML = DomPurify.sanitize(marked(value))\n        if (onBlur) onBlur(e)\n    }\n\n    function inputHander() {\n        setValue(ref.current?.innerText || '')\n        if (onChange) onChange(ref.current?.innerText)\n    }\n\n    return (\n        <div\n            contentEditable={!readonly}\n            ref={ref}\n            className={Classes.md}\n            onFocus={focusHandler}\n            onBlur={blurHandler}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            onInput={inputHander}\n        />\n    )\n}\n\nexport default MarkdownEditorWrapper\n","import React, { useRef, useState, useEffect } from 'react'\nimport MarkdownEditor from '../../MarkdownEditor'\n\nexport interface IMarkdownEditorWrapper {\n    blockProps: {\n        readonly: boolean\n        content: string\n        setEditorIsUp: (state: boolean) => void\n        onFinishEdit: (contentState: any) => void\n    }\n    block: any\n    contentState: any\n}\n\nfunction MarkdownEditorWrapper(props: IMarkdownEditorWrapper) {\n    const { blockProps, block, contentState } = props\n    const [init, setInit] = useState({\n        content: ''\n    })\n\n    const editorIsFocused = useRef<boolean>(false)\n    const editorIsActive = useRef<boolean>(false)\n\n    // Had to hold a reference to the latest value of contentstate\n    // as for some reason the callback functions were getting stale\n    // value of the this prop\n    const contentStateRef = useRef<any>(contentState)\n    contentStateRef.current = contentState\n\n    // This sets the initial code while also making sure\n    // that no \"code\" prop of the Editor is not\n    // directly associated with a wrapper prop\n    // Hence it avoids rerenders on each click\n    useEffect(() => {\n        const entityKey = block.getEntityAt(0)\n        if (entityKey) {\n            const data = contentState.getEntity(entityKey)?.getData()\n            const newState = {\n                content: data.content\n            }\n            setInit(newState)\n        }\n\n        // eslint-disable-next-line\n    }, [])\n\n    function updateEditorState() {\n        if (editorIsFocused.current) blockProps.setEditorIsUp(true)\n        else if (!editorIsFocused.current) blockProps.setEditorIsUp(false)\n    }\n\n    return (\n        <MarkdownEditor\n            content={init.content}\n            readonly={blockProps.readonly}\n            onFocus={() => {\n                editorIsFocused.current = true\n                updateEditorState()\n            }}\n            onBlur={() => {\n                editorIsFocused.current = false\n                updateEditorState()\n            }}\n            onMouseEnter={() => {\n                editorIsActive.current = true\n                updateEditorState()\n            }}\n            onMouseLeave={() => {\n                editorIsActive.current = false\n                updateEditorState()\n            }}\n            onChange={(content) => {\n                const entityKey = block.getEntityAt(0)\n                console.log(entityKey)\n                const contentState = contentStateRef.current\n                if (entityKey) {\n                    console.log(content)\n                    const newContentState = contentState.mergeEntityData(\n                        entityKey,\n                        {\n                            content: content\n                        }\n                    )\n                    blockProps.onFinishEdit(newContentState)\n                } else console.log('OOPS MARKDOWN')\n            }}\n        />\n    )\n}\n\nexport default MarkdownEditorWrapper\n","import React, { Fragment } from 'react'\nimport CodeEditorWrapper from '../CodeEditorWrapper'\nimport MarkdownEditorWrapper from '../MarkdownEditorWrapper'\n\nexport interface IAtomicBlockWrapper {\n    blockProps: any\n    block: any\n    contentState: any\n}\n\nfunction AtomicBlockWrapper(props: IAtomicBlockWrapper) {\n    if (!props.block.getEntityAt(0)) return <Fragment />\n    const entity = props.contentState.getEntity(props.block.getEntityAt(0))\n    const { type } = entity.getData()\n    if (type === 'monaco') {\n        return <CodeEditorWrapper {...props} />\n    }\n\n    return <MarkdownEditorWrapper {...props} />\n}\n\nexport default AtomicBlockWrapper\n","/* loaded by smart-asset */\nexport default require(\"./plus~YOwKNLmC.svg\")","/* loaded by smart-asset */\nexport default require(\"./heading~QOqIzRab.svg\")","/* loaded by smart-asset */\nexport default require(\"./subheading~GoYdSCEx.svg\")","/* loaded by smart-asset */\nexport default require(\"./blockquote~KUbmhmdU.svg\")","/* loaded by smart-asset */\nexport default require(\"./unorderedlist~bfbrgOYJ.svg\")","/* loaded by smart-asset */\nexport default require(\"./orderedlist~GrRCmwBQ.svg\")","/* loaded by smart-asset */\nexport default require(\"./code~bnLStfXP.svg\")","/* loaded by smart-asset */\nexport default require(\"./markdown~lbIWfMVw.svg\")","export const getNodeFromKey = (key: string) => {\n    return document.querySelectorAll(`[data-offset-key=\"${key}-0-0\"]`)[0]\n}\n\nexport const getAbsolutePosition = (node: HTMLDivElement | null) => {\n    if (node) {\n        const offsetTop =\n            window.pageYOffset || document.documentElement.scrollTop\n        const offsetLeft =\n            window.pageXOffset || document.documentElement.scrollLeft\n\n        const rect = node.getBoundingClientRect()\n\n        return {\n            top: rect.top + offsetTop,\n            left: rect.left + offsetLeft\n        }\n    }\n\n    return { top: 0, left: 0 }\n}\n\nexport const saveToLocalStorageHOF = () => {\n    let timer: any\n\n    return ({\n        key = 'article',\n        content\n    }: {\n        key?: string\n        content: string\n    }) => {\n        clearTimeout(timer)\n        timer = setTimeout(() => {\n            const lstore = window.localStorage || localStorage\n            lstore.setItem(key, content)\n        }, 300)\n    }\n}\n\nexport const retrieveFromLocalStorageHOF = () => {\n    return ({ key }: { key: string }) => {\n        const lstore = window.localStorage || localStorage\n        return lstore.getItem(key)\n    }\n}\n","import React, { useState, useEffect, useCallback, useRef } from 'react'\nimport Classes from './index.module.css'\nimport Plus from '../../../assets/plus.svg'\nimport H1 from '../../../assets/heading.svg'\nimport H2 from '../../../assets/subheading.svg'\nimport Bq from '../../../assets/blockquote.svg'\nimport Ul from '../../../assets/unorderedlist.svg'\nimport Ol from '../../../assets/orderedlist.svg'\nimport Code from '../../../assets/code.svg'\nimport Md from '../../../assets/markdown.svg'\nimport { getNodeFromKey } from '../utility'\n\n// ==================================== INTERFACE ===============================\n\nexport interface ToolbarConfig {\n    editor: any\n    editorRef: any\n    toggleBlockStyle?: (blockType: string, subType?: string) => void\n    offSetLeft?: number\n    offSetTop?: number\n    children?: any\n}\n\ninterface IStyleButton {\n    onToggle: (style: string, subType?: string) => void\n    active: boolean\n    style: string\n    label: JSX.Element\n    subType?: string\n}\n\n// ==================================== HELPER COMPONENT ========================\n\nconst StyleButton = ({\n    onToggle,\n    active,\n    style,\n    label,\n    subType\n}: IStyleButton) => {\n    const onToggleHandler = (\n        e: React.MouseEvent<HTMLSpanElement, MouseEvent>\n    ) => {\n        e.preventDefault()\n        onToggle(style, subType)\n    }\n\n    let className = Classes.styleButton\n    if (active) {\n        className += ' ' + Classes.activeButton\n    }\n\n    return (\n        <span className={className} onMouseDown={onToggleHandler}>\n            {label}\n        </span>\n    )\n}\n\nconst BLOCK_TYPES = [\n    { label: <img className={Classes.icon} src={H1} />, style: 'header-one' },\n    { label: <img className={Classes.icon} src={H2} />, style: 'header-two' },\n    { label: <img className={Classes.icon} src={Bq} />, style: 'blockquote' },\n    {\n        label: <img className={Classes.icon} src={Ul} />,\n        style: 'unordered-list-item'\n    },\n    {\n        label: <img className={Classes.icon} src={Ol} />,\n        style: 'ordered-list-item'\n    },\n    {\n        label: <img className={Classes.icon} src={Code} />,\n        style: 'atomic',\n        subType: 'monaco'\n    },\n    {\n        label: <img className={Classes.icon} src={Md} />,\n        style: 'atomic',\n        subType: 'markdown'\n    }\n]\n\nconst BlockStyleControls = (props: any) => {\n    const { editorState } = props\n    const selection = editorState.getSelection()\n    const blockType = editorState\n        .getCurrentContent()\n        .getBlockForKey(selection.getStartKey())\n        .getType()\n\n    return (\n        <div className={Classes.controls}>\n            {BLOCK_TYPES.map((type, idx) => (\n                <StyleButton\n                    key={`${type.style}-${idx}`}\n                    active={type.style === blockType}\n                    label={type.label}\n                    onToggle={props.onToggle}\n                    style={type.style}\n                    subType={type.subType}\n                />\n            ))}\n        </div>\n    )\n}\n// ==================================== COMPONENT ===============================\n\nfunction SideToolbar({\n    editor,\n    editorRef,\n    toggleBlockStyle,\n    offSetLeft = 2,\n    offSetTop = 1\n}: ToolbarConfig) {\n    const [position, setPostion] = useState({ top: 0, left: 0 })\n    const [show, setShow] = useState(false)\n    const ref = useRef<HTMLDivElement>(null)\n\n    /**\n     * memoizedClickHandler handles the mouse clicks\n     * Changes the state according to the location of\n     * mouse click\n     */\n    const memoizedClickHandler = useCallback((ev: MouseEvent) => {\n        if (ref.current?.contains(ev.target as Node)) return\n        setShow(false)\n    }, [])\n\n    useEffect(() => {\n        document.addEventListener('mousedown', memoizedClickHandler)\n\n        return () =>\n            document.removeEventListener('mousedown', memoizedClickHandler)\n    }, [memoizedClickHandler])\n\n    useEffect(() => {\n        const selectionState = editor.getSelection()\n        const start = selectionState.getStartKey()\n        const currentContent = editor.getCurrentContent()\n        const currentContentBlock = currentContent.getBlockForKey(start)\n\n        const node = getNodeFromKey(\n            currentContentBlock.getKey()\n        ) as HTMLDivElement\n\n        const computedStyle = window.getComputedStyle(node)\n        const totalNodeHeight = parseInt(computedStyle.height)\n\n        setPostion({\n            left: -(16 * offSetLeft),\n            top: node.offsetTop + totalNodeHeight / 2 + 16 * offSetTop\n        })\n    }, [editor, editorRef])\n\n    return (\n        <div className={Classes.toolbarContainer} style={{ ...position }}>\n            <div\n                className={Classes.iconContainer}\n                onClick={() => setShow(!show)}\n            >\n                <img className={Classes.plusIcon} src={Plus} />\n            </div>\n            <div\n                ref={ref}\n                className={`${Classes.drawer} ${\n                    !show ? Classes.hide : Classes.show\n                }`}\n            >\n                <BlockStyleControls\n                    editorState={editor}\n                    onToggle={(blockStyle: string, subType?: string) => {\n                        toggleBlockStyle &&\n                            toggleBlockStyle(blockStyle, subType)\n                        setShow(false)\n                    }}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default SideToolbar\n","/* loaded by smart-asset */\nexport default require(\"./bold~smduNppc.svg\")","/* loaded by smart-asset */\nexport default require(\"./italic~bkFUWxpm.svg\")","/* loaded by smart-asset */\nexport default require(\"./underline~dQaKFara.svg\")","import React, { useState, useEffect } from 'react'\nimport Classes from './index.module.css'\nimport Bold from '../../../assets/bold.svg'\nimport Italic from '../../../assets/italic.svg'\nimport Underline from '../../../assets/underline.svg'\n\n/**\n * @returns The selected area\n */\nconst getVisibleSelectionRect = () => {\n    let target: DOMRect | null = null\n    // Putting it into try catch block because I observed a weird error\n    // Error: getRangeAt(0): 0 is not a valid index\n    // Couldn't replicate the error\n    try {\n        const selection = window.getSelection()?.getRangeAt(0).getClientRects()\n        if (selection?.length) {\n            if (selection[0].width === 0) target = selection[1]\n            else target = selection[0]\n        }\n    } catch (error) {\n        console.error(error)\n    }\n\n    return target\n}\n\n// ==================================== INTERFACE ===============================\n\nexport interface ToolbarConfig {\n    editor: any\n    editorRef: any\n    offsetTop?: number\n    offsetLeft?: number\n    editorPosition: {\n        top: number\n        left: number\n    }\n    toggleInlineStyle?: (inlineStyle: string) => void\n    children?: any\n}\n\ninterface IStyleButton {\n    onToggle: (style: string) => void\n    active: boolean\n    style: string\n    label: JSX.Element\n}\n\n// ==================================== HELPER COMPONENT ========================\n\nconst StyleButton = ({ onToggle, active, style, label }: IStyleButton) => {\n    const onToggleHandler = (\n        e: React.MouseEvent<HTMLSpanElement, MouseEvent>\n    ) => {\n        e.preventDefault()\n        onToggle(style)\n    }\n\n    let className = Classes.styleButton\n    if (active) {\n        className += ' ' + Classes.activeButton\n    }\n\n    return (\n        <span className={className} onMouseDown={onToggleHandler}>\n            {label}\n        </span>\n    )\n}\n\nconst INLINE_STYLES = [\n    { label: <img className={Classes.icon} src={Bold} />, style: 'BOLD' },\n    { label: <img className={Classes.icon} src={Italic} />, style: 'ITALIC' },\n    {\n        label: <img className={Classes.icon} src={Underline} />,\n        style: 'UNDERLINE'\n    }\n]\n\nconst InlineStyleControls = (props: any) => {\n    const currentStyle = props.editorState.getCurrentInlineStyle()\n\n    return (\n        <div className={Classes.controls}>\n            {INLINE_STYLES.map((type, idx) => (\n                <StyleButton\n                    key={`inline-style-${idx}`}\n                    active={currentStyle.has(type.style)}\n                    label={type.label}\n                    onToggle={props.onToggle}\n                    style={type.style}\n                />\n            ))}\n        </div>\n    )\n}\n\n// ==================================== CONSTANTS ===============================\n\nconst initialPosition = { top: -100, left: -100 }\n\n// ==================================== COMPONENT ===============================\n\nfunction InlineToolbar({\n    editor,\n    editorRef,\n    editorPosition,\n    offsetTop = 2 + 0.5,\n    offsetLeft = 2,\n    toggleInlineStyle\n}: ToolbarConfig) {\n    const [position, setPostion] = useState(initialPosition)\n\n    useEffect(() => {\n        const selectionState = editor.getSelection()\n\n        if (!selectionState.isCollapsed()) {\n            const selectionRect = getVisibleSelectionRect()\n            if (!selectionRect) return\n\n            // The toolbar shouldn't be positioned directly on top of the selected text,\n            // but rather with a small offset so the caret doesn't overlap with the text.\n            const offsetTopRem = 16 * offsetTop\n            const offsetLeftRem = 16 * offsetLeft\n            const pageoffset =\n                window.pageYOffset || document.documentElement.scrollTop\n\n            setPostion({\n                top:\n                    selectionRect.top +\n                    pageoffset -\n                    editorPosition.top -\n                    offsetTopRem,\n\n                left:\n                    selectionRect.left +\n                    selectionRect.width / 2 -\n                    editorPosition.left -\n                    offsetLeftRem\n            })\n        } else {\n            setPostion(initialPosition)\n        }\n    }, [editor, editorRef])\n\n    return (\n        <div className={Classes.toolbarContainer} style={{ ...position }}>\n            {position.top !== initialPosition.top && (\n                <InlineStyleControls\n                    editorState={editor}\n                    onToggle={toggleInlineStyle}\n                />\n            )}\n        </div>\n    )\n}\n\nexport default InlineToolbar\n","import React, { MouseEvent } from 'react'\nimport Classes from './index.module.css'\n\n// ===================================== INTERFACES ========================================\n\nexport interface LoginProps {\n    name: string;\n    className?: string;\n    onClick?: (event: MouseEvent) => void;\n}\n\n// ===================================== COMPONENT =========================================\n\nfunction Button({ name, className, onClick }: LoginProps) {\n    return (\n        <button\n            onClick={onClick}\n            className={[Classes.btn, className].join(' ')}>\n            {name}\n        </button>\n    )\n}\n\nexport default Button\n","import React, { useState, useCallback, useRef, useEffect } from 'react'\nimport AtomicBlockWrapper from './AtomicBlockWrapper'\nimport Classes from './index.module.css'\n\nimport {\n    Editor as DraftEditor,\n    EditorState,\n    AtomicBlockUtils,\n    RichUtils,\n    getDefaultKeyBinding,\n    convertFromRaw,\n    convertToRaw\n} from 'draft-js'\n\n// Don't remove this! Check https://draftjs.org/docs/advanced-topics-issues-and-pitfalls#missing-draftcss\nimport 'draft-js/dist/Draft.css'\n\nimport SideToolbar from './SideToolbar'\nimport InlineToolbar from './InlineToolbar'\nimport {\n    getNodeFromKey,\n    saveToLocalStorageHOF,\n    retrieveFromLocalStorageHOF,\n    getAbsolutePosition\n} from './utility'\nimport Button from '../Button'\n\n// ======================================== INTERFACES =============================================\n\n/**\n * Interface for BlogEditor\n */\nexport interface IBlogEditor {\n    readonly?: boolean\n    content?: string\n    storageKey?: string\n    className?: string\n}\n\n// ========================================= HELPER FUNCTIONS =======================================\n\n/**\n * Assigns custom classes to the draft js blocks\n * @param ContentBlock\n */\nconst blockStyleFn = (ContentBlock: any) => {\n    const type = ContentBlock.getType()\n    switch (type) {\n        case 'header-one':\n            return Classes.editorH1\n        case 'header-two':\n            return Classes.editorH2\n        case 'blockquote':\n            return Classes.editorBlockquote\n        case 'ordered-list-item':\n            return Classes.editorOL\n        case 'unordered-list-item':\n            return Classes.editorUL\n        case 'atomic':\n            return Classes.editorAtomic\n        default:\n            return Classes.editorText\n    }\n}\n\n/**\n * Converts the javascript state object into JSON\n * and then stores it in the localstorage\n * @param data\n */\nconst saveToLocalStorage = saveToLocalStorageHOF()\n\n/**\n * Retreive the data from local storage\n */\nconst retrieveFromLocalStorage = retrieveFromLocalStorageHOF()\n\n/**\n * serializeContentState serializes the content state into string\n * @param contentState\n */\nconst serializeContentState = (contentState: any) => {\n    return JSON.stringify(convertToRaw(contentState))\n}\n\n/**\n * Receives the JSON object in string format\n * Parses it into object and the converts it into\n * a draft.js contentBlock\n * @param content\n */\nconst deserializeToContentState = (content: string) => {\n    return convertFromRaw(JSON.parse(content))\n}\n\n/**\n * Looks for older content and passed in content\n * to initialize the state\n * @param content\n */\nconst initializeEditorState = ({\n    content,\n    readonly,\n    storageKey\n}: {\n    content?: string\n    readonly?: boolean\n    storageKey: string\n}) => {\n    // If some content was passed in that initialize state from that\n    if (content) {\n        return EditorState.createWithContent(deserializeToContentState(content))\n    }\n\n    // If no content was provided then look for older saved value\n    const oldContent = retrieveFromLocalStorage({ key: storageKey })\n    if (oldContent && !readonly) {\n        return EditorState.createWithContent(\n            deserializeToContentState(oldContent)\n        )\n    }\n\n    // If no content and older saved value was found then\n    // initialize the state from an empty object\n    return EditorState.createEmpty()\n}\n\n// =====================================================================================================\n\nfunction BlogEditor({\n    readonly,\n    content,\n    className,\n    storageKey = 'article'\n}: IBlogEditor) {\n    /**\n     * Stores the state of the editor\n     */\n    const [state, setState] = useState(\n        initializeEditorState({ content, storageKey, readonly })\n    )\n\n    /**\n     * Stores the state if the code editor is active or not\n     */\n    const [editorIsUp, setEditorIsUp] = useState(false)\n\n    /**\n     * Reference to the draft editor\n     */\n    const DraftRef = useRef<DraftEditor>(null)\n\n    const DraftContainerRef = useRef<HTMLDivElement>(null)\n\n    /**\n     * saveToStorageFn stores the editor contentState\n     * into the local storage\n     */\n    const saveToStorageFn = useCallback(() => {\n        const content = state.getCurrentContent()\n        saveToLocalStorage({\n            content: serializeContentState(content),\n            key: storageKey\n        })\n    }, [state])\n\n    /**\n     * Memoized implementation of the renderer function\n     */\n    // @ts-ignore\n    const memoizedBlockRendererFn = useCallback((block) => {\n        const type = block.getType()\n        if (type === 'atomic') {\n            return {\n                component: AtomicBlockWrapper,\n                editable: false,\n                props: {\n                    language: 'javascript',\n                    height: '20rem',\n                    readonly,\n                    setEditorIsUp,\n                    onFinishEdit: (newContentState: any) => {\n                        setState(EditorState.createWithContent(newContentState))\n                    }\n                }\n            }\n        }\n    }, [])\n\n    useEffect(() => {\n        saveToStorageFn()\n    }, [saveToStorageFn, state])\n\n    /**\n     * toggleInlineStyle toggles the inline style\n     * for the draftjs blocks\n     * @param inlineStyle\n     */\n    const toggleInlineStyle = (inlineStyle: string) => {\n        setState(RichUtils.toggleInlineStyle(state, inlineStyle))\n    }\n\n    /**\n     * Handler for toggling the block type\n     * Has additional implementation to modify the\n     * behaviour of the custom code editor\n     *\n     * It ensures that the draft wrapper around the code\n     * editor has set contentEditable to false.\n     *\n     * NOTE: Not doing so will create problems like\n     * draft taking control over the input on code editor!\n     * @param blockType\n     */\n    const toggleBlockType = (blockType: string, subType?: string) => {\n        if (blockType !== 'atomic')\n            setState(RichUtils.toggleBlockType(state, blockType))\n        else {\n            // Add atomic to the current state\n            const contentState = state.getCurrentContent()\n            const contentStateWithEntity = contentState.createEntity(\n                'ATOMIC',\n                'IMMUTABLE',\n                { type: subType }\n            )\n            const entityKey = contentStateWithEntity.getLastCreatedEntityKey()\n            const newEditorState = EditorState.set(state, {\n                currentContent: contentStateWithEntity\n            })\n            const newState = AtomicBlockUtils.insertAtomicBlock(\n                newEditorState,\n                entityKey,\n                ' '\n            )\n            setState(newState)\n\n            // Get a reference to atomic instance\n            const newContentState = newState.getCurrentContent()\n            const draftKey = newContentState.getLastBlock().getKey()\n            const atomicKey = newContentState.getKeyBefore(draftKey)\n\n            // Get the atomic node\n            // This is done asynchronously because\n            // There is usually a delay between block rendering by\n            // Draft js\n            setTimeout(() => {\n                const atomicParent = getNodeFromKey(atomicKey)\n\n                const divReferenceToAtomicParent = atomicParent as HTMLDivElement\n                if (divReferenceToAtomicParent)\n                    divReferenceToAtomicParent.contentEditable = 'false'\n            }, 0)\n        }\n    }\n\n    /**\n     * onChangeHandler wraps setState\n     * @param state\n     */\n    const onChangeHandler = (state: EditorState) => setState(state)\n\n    /**\n     * focus function handles the focus on the draft editor\n     */\n    const focus = () => {\n        if (!readonly && DraftRef.current) DraftRef.current.focus()\n    }\n\n    /**\n     * Handles the basic key commands on the editor\n     * @param command\n     * @param editorState\n     */\n    const handleKeyCommand = (command: string, editorState: EditorState) => {\n        const newState = RichUtils.handleKeyCommand(editorState, command)\n        if (newState) {\n            setState(newState)\n            return true\n        }\n        return false\n    }\n\n    /**\n     * Assigns speacial key mapping on the editor\n     * @param e\n     */\n    const mapKeyToEditorCommand = (e: any) => {\n        // Save to local storage on each key press\n        saveToStorageFn()\n\n        // Change tab functionality\n        if (e.keyCode === 9 /* TAB */) {\n            const newEditorState = RichUtils.onTab(e, state, 4 /* maxDepth */)\n            if (newEditorState !== state) {\n                setState(newEditorState)\n            }\n            return\n        }\n\n        return getDefaultKeyBinding(e)\n    }\n\n    return (\n        <div\n            ref={DraftContainerRef}\n            className={`${Classes.container} ${!readonly && Classes.editMode}`}\n        >\n            <div\n                className={[Classes.editor, className].join(' ')}\n                onClick={focus}\n            >\n                {!readonly && (\n                    <SideToolbar\n                        offSetLeft={1}\n                        offSetTop={1}\n                        editor={state}\n                        editorRef={DraftRef}\n                        toggleBlockStyle={toggleBlockType}\n                    />\n                )}\n                {!readonly && (\n                    <InlineToolbar\n                        editorPosition={getAbsolutePosition(\n                            DraftContainerRef.current\n                        )}\n                        editor={state}\n                        editorRef={DraftRef}\n                        toggleInlineStyle={toggleInlineStyle}\n                    />\n                )}\n                {/* Adding this because of incompatible types\n                // @ts-ignore */}\n                <DraftEditor\n                    spellCheck\n                    ref={DraftRef}\n                    readOnly={readonly || editorIsUp}\n                    editorState={state}\n                    onChange={onChangeHandler}\n                    blockStyleFn={blockStyleFn}\n                    keyBindingFn={mapKeyToEditorCommand}\n                    // @ts-ignore\n                    handleKeyCommand={handleKeyCommand}\n                    blockRendererFn={memoizedBlockRendererFn}\n                />\n            </div>\n            {!readonly && (\n                <Button\n                    name='Show data'\n                    onClick={() => console.log(state.toJS())}\n                    className={Classes.btn}\n                />\n            )}\n        </div>\n    )\n}\n\nexport default BlogEditor\n","import React from 'react'\n// eslint-disable-next-line no-unused-vars\nimport BlogEditor, { IBlogEditor } from './components/BlogEditor'\n\nconst Editor = (props: IBlogEditor): JSX.Element => {\n    return <BlogEditor {...props} />\n}\n\nexport default Editor\n"],"sourceRoot":""}